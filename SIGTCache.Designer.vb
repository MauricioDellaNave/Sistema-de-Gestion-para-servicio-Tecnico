'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.1
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



Partial Public Class SIGTCacheClientSyncProvider
    Inherits Microsoft.Synchronization.Data.SqlServerCe.SqlCeClientSyncProvider
    
    Public Sub New()
        MyBase.New
        Me.ConnectionString = Global.Sistema_de_Gestion_Tecnica.My.MySettings.Default.ClientSIGTConnectionString
    End Sub
    
    Public Sub New(ByVal connectionString As String)
        MyBase.New
        Me.ConnectionString = connectionString
    End Sub
End Class

Partial Public Class SIGTCacheSyncAgent
    Inherits Microsoft.Synchronization.SyncAgent
    
    Private _clientesSyncTable As ClientesSyncTable
    
    Private _reparacionesSyncTable As ReparacionesSyncTable
    
    Private _ordenServicioSyncTable As OrdenServicioSyncTable
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeSyncProviders
        Me.InitializeSyncTables
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property Clientes() As ClientesSyncTable
        Get
            Return Me._clientesSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._clientesSyncTable)
            Me._clientesSyncTable = value
            Me.Configuration.SyncTables.Add(Me._clientesSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property Reparaciones() As ReparacionesSyncTable
        Get
            Return Me._reparacionesSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._reparacionesSyncTable)
            Me._reparacionesSyncTable = value
            Me.Configuration.SyncTables.Add(Me._reparacionesSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property OrdenServicio() As OrdenServicioSyncTable
        Get
            Return Me._ordenServicioSyncTable
        End Get
        Set
            Me.Configuration.SyncTables.Remove(Me._ordenServicioSyncTable)
            Me._ordenServicioSyncTable = value
            Me.Configuration.SyncTables.Add(Me._ordenServicioSyncTable)
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncProviders()
        'Create SyncProviders.
        Me.RemoteProvider = New SIGTCacheServerSyncProvider()
        Me.LocalProvider = New SIGTCacheClientSyncProvider()
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncTables()
        'Create SyncTables.
        Me._clientesSyncTable = New ClientesSyncTable()
        Me._clientesSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("ClientesSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._clientesSyncTable)
        Me._reparacionesSyncTable = New ReparacionesSyncTable()
        Me._reparacionesSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("ReparacionesSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._reparacionesSyncTable)
        Me._ordenServicioSyncTable = New OrdenServicioSyncTable()
        Me._ordenServicioSyncTable.SyncGroup = New Microsoft.Synchronization.Data.SyncGroup("OrdenServicioSyncTableSyncGroup")
        Me.Configuration.SyncTables.Add(Me._ordenServicioSyncTable)
    End Sub
    
    Partial Public Class ClientesSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "Clientes"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
    
    Partial Public Class ReparacionesSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "Reparaciones"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
    
    Partial Public Class OrdenServicioSyncTable
        Inherits Microsoft.Synchronization.Data.SyncTable
        
        Partial Private Sub OnInitialized()
        End Sub
        
        Public Sub New()
            MyBase.New
            Me.InitializeTableOptions
            Me.OnInitialized
        End Sub
        
        <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitializeTableOptions()
            Me.TableName = "OrdenServicio"
            Me.CreationOption = Microsoft.Synchronization.Data.TableCreationOption.DropExistingOrCreateNewTable
        End Sub
    End Class
End Class


Partial Public Class ClientesSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ClientesSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = "INSERT INTO dbo.Clientes ([RazonSocial], [DVH], [IDEstado], [IDCliente], [LastEdi"& _ 
            "tDate], [CreationDate]) VALUES (@RazonSocial, @DVH, @IDEstado, @IDCliente, @Last"& _ 
            "EditDate, @CreationDate) SET @sync_row_count = @@rowcount"
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RazonSocial", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DVH", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDEstado", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDCliente", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastEditDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreationDate", System.Data.SqlDbType.DateTime))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        'ClientesSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = "DELETE FROM dbo.Clientes WHERE ([IDCliente] = @IDCliente) AND (@sync_force_write "& _ 
            "= 1 OR ([LastEditDate] <= @sync_last_received_anchor)) SET @sync_row_count = @@r"& _ 
            "owcount"
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDCliente", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ClientesSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = "UPDATE dbo.Clientes SET [RazonSocial] = @RazonSocial, [DVH] = @DVH, [IDEstado] = "& _ 
            "@IDEstado, [LastEditDate] = @LastEditDate, [CreationDate] = @CreationDate WHERE "& _ 
            "([IDCliente] = @IDCliente) AND (@sync_force_write = 1 OR ([LastEditDate] <= @syn"& _ 
            "c_last_received_anchor)) SET @sync_row_count = @@rowcount"
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@RazonSocial", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DVH", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDEstado", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastEditDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreationDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDCliente", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ClientesSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT [IDCliente], [DeletionDate] FROM dbo.Clientes_Tombstone WHERE ([IDCliente]"& _ 
            " = @IDCliente)"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDCliente", System.Data.SqlDbType.Int))
        'ClientesSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT [RazonSocial], [DVH], [IDEstado], [IDCliente], [LastEditDate], [CreationDa"& _ 
            "te] FROM dbo.Clientes WHERE ([IDCliente] = @IDCliente)"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDCliente", System.Data.SqlDbType.Int))
        'ClientesSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "SELECT [RazonSocial], [DVH], [IDEstado], [IDCliente], [LastEditDate], [CreationDa"& _ 
            "te] FROM dbo.Clientes WHERE ([CreationDate] > @sync_last_received_anchor AND [Cr"& _ 
            "eationDate] <= @sync_new_received_anchor)"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
        'ClientesSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "SELECT [IDCliente], [DeletionDate] FROM dbo.Clientes_Tombstone WHERE (@sync_initi"& _ 
            "alized = 1 AND [DeletionDate] > @sync_last_received_anchor AND [DeletionDate] <="& _ 
            " @sync_new_received_anchor)"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
        'ClientesSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "SELECT [RazonSocial], [DVH], [IDEstado], [IDCliente], [LastEditDate], [CreationDa"& _ 
            "te] FROM dbo.Clientes WHERE ([LastEditDate] > @sync_last_received_anchor AND [La"& _ 
            "stEditDate] <= @sync_new_received_anchor AND [CreationDate] <= @sync_last_receiv"& _ 
            "ed_anchor)"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Clientes"
    End Sub
End Class

Partial Public Class ReparacionesSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'ReparacionesSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = "INSERT INTO dbo.Reparaciones ([IDReparacion], [IDOrden], [Serie], [IDEstado], [ID"& _ 
            "Equipo], [IDUsuario], [DVH], [Falla], [Tarea], [Observaciones], [FechaReparacion"& _ 
            "], [Modelo], [LastEditDate], [CreationDate]) VALUES (@IDReparacion, @IDOrden, @S"& _ 
            "erie, @IDEstado, @IDEquipo, @IDUsuario, @DVH, @Falla, @Tarea, @Observaciones, @F"& _ 
            "echaReparacion, @Modelo, @LastEditDate, @CreationDate) SET @sync_row_count = @@r"& _ 
            "owcount"
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDReparacion", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDOrden", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Serie", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDEstado", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDEquipo", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDUsuario", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DVH", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Falla", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Tarea", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Observaciones", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FechaReparacion", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Modelo", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastEditDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreationDate", System.Data.SqlDbType.DateTime))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        'ReparacionesSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = "DELETE FROM dbo.Reparaciones WHERE ([IDReparacion] = @IDReparacion) AND (@sync_fo"& _ 
            "rce_write = 1 OR ([LastEditDate] <= @sync_last_received_anchor)) SET @sync_row_c"& _ 
            "ount = @@rowcount"
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDReparacion", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'ReparacionesSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = "UPDATE dbo.Reparaciones SET [IDOrden] = @IDOrden, [Serie] = @Serie, [IDEstado] = "& _ 
            "@IDEstado, [IDEquipo] = @IDEquipo, [IDUsuario] = @IDUsuario, [DVH] = @DVH, [Fall"& _ 
            "a] = @Falla, [Tarea] = @Tarea, [Observaciones] = @Observaciones, [FechaReparacio"& _ 
            "n] = @FechaReparacion, [Modelo] = @Modelo, [LastEditDate] = @LastEditDate, [Crea"& _ 
            "tionDate] = @CreationDate WHERE ([IDReparacion] = @IDReparacion) AND (@sync_forc"& _ 
            "e_write = 1 OR ([LastEditDate] <= @sync_last_received_anchor)) SET @sync_row_cou"& _ 
            "nt = @@rowcount"
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDOrden", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Serie", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDEstado", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDEquipo", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDUsuario", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@DVH", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Falla", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Tarea", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Observaciones", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FechaReparacion", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Modelo", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastEditDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreationDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDReparacion", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'ReparacionesSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT [IDReparacion], [DeletionDate] FROM dbo.Reparaciones_Tombstone WHERE ([IDR"& _ 
            "eparacion] = @IDReparacion)"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDReparacion", System.Data.SqlDbType.Int))
        'ReparacionesSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT [IDReparacion], [IDOrden], [Serie], [IDEstado], [IDEquipo], [IDUsuario], ["& _ 
            "DVH], [Falla], [Tarea], [Observaciones], [FechaReparacion], [Modelo], [LastEditD"& _ 
            "ate], [CreationDate] FROM dbo.Reparaciones WHERE ([IDReparacion] = @IDReparacion"& _ 
            ")"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDReparacion", System.Data.SqlDbType.Int))
        'ReparacionesSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "SELECT [IDReparacion], [IDOrden], [Serie], [IDEstado], [IDEquipo], [IDUsuario], ["& _ 
            "DVH], [Falla], [Tarea], [Observaciones], [FechaReparacion], [Modelo], [LastEditD"& _ 
            "ate], [CreationDate] FROM dbo.Reparaciones WHERE ([CreationDate] > @sync_last_re"& _ 
            "ceived_anchor AND [CreationDate] <= @sync_new_received_anchor)"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
        'ReparacionesSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "SELECT [IDReparacion], [DeletionDate] FROM dbo.Reparaciones_Tombstone WHERE (@syn"& _ 
            "c_initialized = 1 AND [DeletionDate] > @sync_last_received_anchor AND [DeletionD"& _ 
            "ate] <= @sync_new_received_anchor)"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
        'ReparacionesSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "SELECT [IDReparacion], [IDOrden], [Serie], [IDEstado], [IDEquipo], [IDUsuario], ["& _ 
            "DVH], [Falla], [Tarea], [Observaciones], [FechaReparacion], [Modelo], [LastEditD"& _ 
            "ate], [CreationDate] FROM dbo.Reparaciones WHERE ([LastEditDate] > @sync_last_re"& _ 
            "ceived_anchor AND [LastEditDate] <= @sync_new_received_anchor AND [CreationDate]"& _ 
            " <= @sync_last_received_anchor)"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "Reparaciones"
    End Sub
End Class

Partial Public Class OrdenServicioSyncAdapter
    Inherits Microsoft.Synchronization.Data.Server.SyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Me.InitializeCommands
        Me.InitializeAdapterProperties
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeCommands()
        'OrdenServicioSyncTableInsertCommand command.
        Me.InsertCommand = New System.Data.SqlClient.SqlCommand()
        Me.InsertCommand.CommandText = "INSERT INTO dbo.OrdenServicio ([IDCliente], [FechaIngreso], [Numero], [IDOrden], "& _ 
            "[LastEditDate], [CreationDate]) VALUES (@IDCliente, @FechaIngreso, @Numero, @IDO"& _ 
            "rden, @LastEditDate, @CreationDate) SET @sync_row_count = @@rowcount"
        Me.InsertCommand.CommandType = System.Data.CommandType.Text
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDCliente", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FechaIngreso", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Numero", System.Data.SqlDbType.NVarChar))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDOrden", System.Data.SqlDbType.Int))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastEditDate", System.Data.SqlDbType.DateTime))
        Me.InsertCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreationDate", System.Data.SqlDbType.DateTime))
        Dim insertcommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        insertcommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.InsertCommand.Parameters.Add(insertcommand_sync_row_countParameter)
        'OrdenServicioSyncTableDeleteCommand command.
        Me.DeleteCommand = New System.Data.SqlClient.SqlCommand()
        Me.DeleteCommand.CommandText = "DELETE FROM dbo.OrdenServicio WHERE ([IDOrden] = @IDOrden) AND (@sync_force_write"& _ 
            " = 1 OR ([LastEditDate] <= @sync_last_received_anchor)) SET @sync_row_count = @@"& _ 
            "rowcount"
        Me.DeleteCommand.CommandType = System.Data.CommandType.Text
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDOrden", System.Data.SqlDbType.Int))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.DeleteCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Dim deletecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        deletecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.DeleteCommand.Parameters.Add(deletecommand_sync_row_countParameter)
        'OrdenServicioSyncTableUpdateCommand command.
        Me.UpdateCommand = New System.Data.SqlClient.SqlCommand()
        Me.UpdateCommand.CommandText = "UPDATE dbo.OrdenServicio SET [IDCliente] = @IDCliente, [FechaIngreso] = @FechaIng"& _ 
            "reso, [Numero] = @Numero, [LastEditDate] = @LastEditDate, [CreationDate] = @Crea"& _ 
            "tionDate WHERE ([IDOrden] = @IDOrden) AND (@sync_force_write = 1 OR ([LastEditDa"& _ 
            "te] <= @sync_last_received_anchor)) SET @sync_row_count = @@rowcount"
        Me.UpdateCommand.CommandType = System.Data.CommandType.Text
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDCliente", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@FechaIngreso", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Numero", System.Data.SqlDbType.NVarChar))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@LastEditDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CreationDate", System.Data.SqlDbType.DateTime))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDOrden", System.Data.SqlDbType.Int))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_force_write", System.Data.SqlDbType.Bit))
        Me.UpdateCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Dim updatecommand_sync_row_countParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_row_count", System.Data.SqlDbType.Int)
        updatecommand_sync_row_countParameter.Direction = System.Data.ParameterDirection.Output
        Me.UpdateCommand.Parameters.Add(updatecommand_sync_row_countParameter)
        'OrdenServicioSyncTableSelectConflictDeletedRowsCommand command.
        Me.SelectConflictDeletedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictDeletedRowsCommand.CommandText = "SELECT [IDOrden], [DeletionDate] FROM dbo.OrdenServicio_Tombstone WHERE ([IDOrden"& _ 
            "] = @IDOrden)"
        Me.SelectConflictDeletedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictDeletedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDOrden", System.Data.SqlDbType.Int))
        'OrdenServicioSyncTableSelectConflictUpdatedRowsCommand command.
        Me.SelectConflictUpdatedRowsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectConflictUpdatedRowsCommand.CommandText = "SELECT [IDCliente], [FechaIngreso], [Numero], [IDOrden], [LastEditDate], [Creatio"& _ 
            "nDate] FROM dbo.OrdenServicio WHERE ([IDOrden] = @IDOrden)"
        Me.SelectConflictUpdatedRowsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectConflictUpdatedRowsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@IDOrden", System.Data.SqlDbType.Int))
        'OrdenServicioSyncTableSelectIncrementalInsertsCommand command.
        Me.SelectIncrementalInsertsCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalInsertsCommand.CommandText = "SELECT [IDCliente], [FechaIngreso], [Numero], [IDOrden], [LastEditDate], [Creatio"& _ 
            "nDate] FROM dbo.OrdenServicio WHERE ([CreationDate] > @sync_last_received_anchor"& _ 
            " AND [CreationDate] <= @sync_new_received_anchor)"
        Me.SelectIncrementalInsertsCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalInsertsCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
        'OrdenServicioSyncTableSelectIncrementalDeletesCommand command.
        Me.SelectIncrementalDeletesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalDeletesCommand.CommandText = "SELECT [IDOrden], [DeletionDate] FROM dbo.OrdenServicio_Tombstone WHERE (@sync_in"& _ 
            "itialized = 1 AND [DeletionDate] > @sync_last_received_anchor AND [DeletionDate]"& _ 
            " <= @sync_new_received_anchor)"
        Me.SelectIncrementalDeletesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_initialized", System.Data.SqlDbType.Bit))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalDeletesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
        'OrdenServicioSyncTableSelectIncrementalUpdatesCommand command.
        Me.SelectIncrementalUpdatesCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectIncrementalUpdatesCommand.CommandText = "SELECT [IDCliente], [FechaIngreso], [Numero], [IDOrden], [LastEditDate], [Creatio"& _ 
            "nDate] FROM dbo.OrdenServicio WHERE ([LastEditDate] > @sync_last_received_anchor"& _ 
            " AND [LastEditDate] <= @sync_new_received_anchor AND [CreationDate] <= @sync_las"& _ 
            "t_received_anchor)"
        Me.SelectIncrementalUpdatesCommand.CommandType = System.Data.CommandType.Text
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_last_received_anchor", System.Data.SqlDbType.DateTime))
        Me.SelectIncrementalUpdatesCommand.Parameters.Add(New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime))
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeAdapterProperties()
        Me.TableName = "OrdenServicio"
    End Sub
End Class

Partial Public Class SIGTCacheServerSyncProvider
    Inherits Microsoft.Synchronization.Data.Server.DbServerSyncProvider
    
    Private _clientesSyncAdapter As ClientesSyncAdapter
    
    Private _reparacionesSyncAdapter As ReparacionesSyncAdapter
    
    Private _ordenServicioSyncAdapter As OrdenServicioSyncAdapter
    
    Partial Private Sub OnInitialized()
    End Sub
    
    Public Sub New()
        MyBase.New
        Dim connectionString As String = Global.Sistema_de_Gestion_Tecnica.My.MySettings.Default.SIGTConnection
        Me.InitializeConnection(connectionString)
        Me.InitializeSyncAdapters
        Me.InitializeNewAnchorCommand
        Me.OnInitialized
    End Sub
    
    Public Sub New(ByVal connectionString As String)
        MyBase.New
        Me.InitializeConnection(connectionString)
        Me.InitializeSyncAdapters
        Me.InitializeNewAnchorCommand
        Me.OnInitialized
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ClientesSyncAdapter() As ClientesSyncAdapter
        Get
            Return Me._clientesSyncAdapter
        End Get
        Set
            Me._clientesSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property ReparacionesSyncAdapter() As ReparacionesSyncAdapter
        Get
            Return Me._reparacionesSyncAdapter
        End Get
        Set
            Me._reparacionesSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Property OrdenServicioSyncAdapter() As OrdenServicioSyncAdapter
        Get
            Return Me._ordenServicioSyncAdapter
        End Get
        Set
            Me._ordenServicioSyncAdapter = value
        End Set
    End Property
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeConnection(ByVal connectionString As String)
        Me.Connection = New System.Data.SqlClient.SqlConnection(connectionString)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeSyncAdapters()
        'Create SyncAdapters.
        Me._clientesSyncAdapter = New ClientesSyncAdapter()
        Me.SyncAdapters.Add(Me._clientesSyncAdapter)
        Me._reparacionesSyncAdapter = New ReparacionesSyncAdapter()
        Me.SyncAdapters.Add(Me._reparacionesSyncAdapter)
        Me._ordenServicioSyncAdapter = New OrdenServicioSyncAdapter()
        Me.SyncAdapters.Add(Me._ordenServicioSyncAdapter)
    End Sub
    
    <System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitializeNewAnchorCommand()
        'selectNewAnchorCmd command.
        Me.SelectNewAnchorCommand = New System.Data.SqlClient.SqlCommand()
        Me.SelectNewAnchorCommand.CommandText = "Select @sync_new_received_anchor = GETUTCDATE()"
        Me.SelectNewAnchorCommand.CommandType = System.Data.CommandType.Text
        Dim selectnewanchorcommand_sync_new_received_anchorParameter As System.Data.SqlClient.SqlParameter = New System.Data.SqlClient.SqlParameter("@sync_new_received_anchor", System.Data.SqlDbType.DateTime)
        selectnewanchorcommand_sync_new_received_anchorParameter.Direction = System.Data.ParameterDirection.Output
        Me.SelectNewAnchorCommand.Parameters.Add(selectnewanchorcommand_sync_new_received_anchorParameter)
    End Sub
End Class
